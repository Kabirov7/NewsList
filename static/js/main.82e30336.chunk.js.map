{"version":3,"sources":["util/Firebase.js","Components/form/table.js","Components/NewsList/NewsList.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","useStyles","makeStyles","table","minWidth","BasicTable","props","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","news","map","row","scope","mass_media_name","href","url","target","title","name","NewsList","useState","setNews","useEffect","firestore","collection","orderBy","limit","onSnapshot","querySnapshot","forEach","doc","push","data","console","log","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAYAA,IAASC,cAVc,CACtBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIhBR,IAASS,YAEMT,QAAf,E,gECLMU,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAIC,SAASC,EAAWC,GACjC,IAAMC,EAAUN,IAEhB,OACE,cAACO,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAWL,EAAQJ,MAAOU,aAAW,eAA5C,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAO,OAAlB,SAA0B,6CAC1B,cAACD,EAAA,EAAD,UAAW,6CAGf,cAACE,EAAA,EAAD,UACGZ,EAAMa,KAAKC,KAAI,SAACC,GAAD,OACd,eAACN,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWP,UAAU,KAAKa,MAAM,MAAhC,SACGD,EAAIE,kBAEP,cAACP,EAAA,EAAD,CAAWP,UAAU,KAAKa,MAAM,MAAhC,SACE,mBAAGE,KAAMH,EAAII,IAAKC,OAAO,SAAzB,SACGL,EAAIM,YANIN,EAAIO,gBC1BhB,SAASC,EAASvB,GAAQ,IAAD,EACjBwB,mBAAS,IADQ,mBAClCX,EADkC,KAC5BY,EAD4B,KAoBvC,OAhBAC,qBAAU,WACAzC,EAAS0C,YACfC,WAAW,QAAQC,QAAQ,iBAAiBC,MAAM,IACnDC,YAAW,SAAUC,GACrB,IAAInB,EAAO,GACXmB,EAAcC,SAAQ,SAAUC,GAC/BrB,EAAKsB,KAAKD,EAAIE,WAEfX,EAAQZ,QAER,IAEHa,qBAAU,WACTW,QAAQC,IAAIzB,KACV,CAACA,IAGH,8BACC,cAACd,EAAD,CAAYc,KAAMA,MCLN0B,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,YAAnB,SACE,cAAClB,EAAD,SCHOmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82e30336.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyCZzPK3NIClc47PXn6HO5MDTdLPQ5G2MuI\",\n\tauthDomain: \"mass-media-crawlers.firebaseapp.com\",\n\tprojectId: \"mass-media-crawlers\",\n\tstorageBucket: \"mass-media-crawlers.appspot.com\",\n\tmessagingSenderId: \"719923862600\",\n\tappId: \"1:719923862600:web:1b7bb7210dcce3e7fa0c7d\",\n\tmeasurementId: \"G-LBCTC0HJ5H\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function BasicTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align={'left'}><b>Mass Media</b></TableCell>\n            <TableCell><b>Title</b></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.news.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.mass_media_name}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                <a href={row.url} target=\"_blank\">\n                  {row.title}\n                </a>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React, {useEffect, useState} from \"react\";\nimport firebase from \"../../util/Firebase\";\nimport BasicTable from \"../form/table\";\n\nexport default function NewsList(props) {\n\tlet [news, setNews] = useState([]);\n\n\n\tuseEffect(() => {\n\t\tlet db = firebase.firestore();\n\t\tdb.collection(\"news\").orderBy(\"scraping_time\").limit(20)\n\t\t\t.onSnapshot(function (querySnapshot) {\n\t\t\t\tlet news = [];\n\t\t\t\tquerySnapshot.forEach(function (doc) {\n\t\t\t\t\tnews.push(doc.data());\n\t\t\t\t});\n\t\t\t\tsetNews(news);\n\t\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconsole.log(news)\n\t}, [news])\n\n\treturn (\n\t\t<div>\n\t\t\t<BasicTable news={news}/>\n\t\t</div>\n\t)\n}\n\n","import './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport NewsList from \"./Components/NewsList/NewsList\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path={\"/NewsList\"}>\n        <NewsList/>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}